syntax = "proto3";
package POGOProtos.Networking.Envelopes;

import public "POGOProtos.Networking.Requests.proto";
import public "POGOProtos.Data.Player.proto";
import public "POGOProtos.Inventory.Item.proto";

message AuthTicket {
	bytes start = 1;
	uint64 expire_timestamp_ms = 2;
	bytes end = 3;
}
message RequestEnvelope {
	int32 status_code = 1;

	uint64 request_id = 3;
	repeated .POGOProtos.Networking.Requests.Request requests = 4;

	repeated .POGOProtos.Networking.Envelopes.Unknown6 unknown6 = 6;
	double latitude = 7;
	double longitude = 8;
	double altitude = 9;
	AuthInfo auth_info = 10;
	.POGOProtos.Networking.Envelopes.AuthTicket auth_ticket = 11;
	int64 unknown12 = 12;

	message AuthInfo {
		string provider = 1;
		JWT token = 2;

		message JWT {
			string contents = 1;
			int32 unknown2  = 2;
		}
	}
}
message ResponseEnvelope {
	int32 status_code = 1;
	uint64 request_id = 2;
	string api_url = 3;

	repeated .POGOProtos.Networking.Envelopes.Unknown6Response unknown6 = 6;
	.POGOProtos.Networking.Envelopes.AuthTicket auth_ticket = 7;

	repeated bytes returns = 100;
	string error = 101;

	message Unknown7 {
		bytes unknown71 = 1;
		int64 unknown72 = 2;
		bytes unknown73 = 3;
	}
}
message Unknown6 {
	int32 request_type = 1; // 5 for IAPs, 6 is unknown still
	Unknown2 unknown2 = 2;

	message Unknown2 {
		bytes unknown1 = 1;
	}
}
message Unknown6Response {
	int32 response_type = 1; // Still don't know what 6 is, but 5 lists items available via IAPs. 
	Unknown2 unknown2 = 2; // Response data

	message Unknown2 {
		uint64 unknown1 = 1; // Maybe status? It's always 1 (success), so it's probably that.
		repeated StoreItem items = 2; // Items to show in the shop
		repeated .POGOProtos.Data.Player.Currency player_currencies = 3; // currencies that player has at the moment
		string unknown4 = 4; // Some base64 encoded stuff...
		
		message StoreItem {
			string item_id = 1; // Internal ID (probably for Google Play/App Store) example: "pgorelease.incenseordinary.1"
			bool is_iap = 2; // If true, this item is bought with real currency (USD, etc.) through the Play/App Store instead of Pokecoins
			.POGOProtos.Data.Player.Currency currency_to_buy = 3; // This defines how much the item costs (with the exception of items that cost real money like Pokecoins, that's defined in the respective store)
			.POGOProtos.Data.Player.Currency yields_currency = 4; // When bought, this IAP will yield this much currency
			.POGOProtos.Inventory.Item.ItemData yields_item = 5; // The item and count of such item that this IAP will yield
			repeated Tag tags = 6; // Stuff like SORT:12, CATEGORY:ITEMS
			int32 unknown7 = 7; // Possibly something to toggle visibility in the store/purchasibility?
			
			message Tag {
				string key = 1;
				string value = 2;
			}
		}
	}
}
